@model Shopping.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="container-fluid bg-light text-center">
    <img src="~/Images/Dinos3D2.png" height="150px" />
    <h4 class="text-navy text-center">Your One Stop Shop Store</h4><br />
</div>

<div class="text-center mt-2">
    <h3>Shopping Categoríes</h3>

    <div class="mb-2">
        @foreach (var item in Model.Categories)
        {
          @*  <span><strong> @item.Name &nbsp;&nbsp;</strong></span>*@
         
          <span> <a href="@Url.Action("GetCategories", "Home", new { category = item.Name})" > @item.Name&nbsp;&nbsp;</a></span> 
    
        }
    </div>
</div>


<div class="mb-2">
    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Order by  Name</a>&nbsp;&nbsp;
    <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">Order by Price</a>
</div>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Search by name or category: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-warning" />
            <a asp-action="Index" class="btn btn-success">View all Products</a>
        </p>
    </div>
</form>


@if (Model.Quantity > 0)
{
    <a asp-action="ShowCart" class="btn btn-outline-danger" style="border-radius:15px">Check Cart (@Model.Quantity)</a>
}

<div class="row row-cols-1 row-cols-md-4 g-4 mt-3">

    @if (Model.Products.Count() > 0)
    {
        @foreach (var item in Model.Products)
        {
            <div class="col">
                <div class="cardShop h-100">
                    <div class="text-center">
                        <p> <h5 class="card-title text-navy"> @item.Name</h5></p>
                        <div class="zoom">
                            <img src="@item.ImageFullPath" style="height:150px; max-width:150px;" />
                        </div>
                    </div>
                    <div class="card-body">
                        @* <p class="card-text">@item.Description</p>*@
                        <p>
                            @{
                                if (item.Description != null)
                                {
                                    string[] noteWords = item.Description.Split(' ');
                                    if (noteWords.Count() > 7)
                                    {
                                        <a class="" role="button" data-bs-toggle="collapse" href="#collapseSum@(item.Id)" aria-expanded="false" aria-controls="collapseSum@(item.Id)">
                                            @(string.Join(" ", noteWords.Take(7)) + "...")
                                        </a>
                                        <div class="collapse" id="collapseSum@(item.Id)">
                                            <div class="card card-body">
                                                @(string.Join(" ", noteWords.Skip(7)))
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => item.Description)
                                        ;
                                    }
                                }
                            }
                        </p>
                        <h5>@Html.DisplayFor(modelItem => item.Price)</h5>
                    </div>
                    <div class="card-footer text-center">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm  btn-secondary">Details</a>
                        <a asp-action="Add" asp-route-id="@item.Id" class="btn btn-sm  btn-primary">Add to Cart</a>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <h3>No products found with your search</h3>
    }
</div>

@{
    var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
}

<div class="text-center">
    <div class="mt-5">
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.Products.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-warning @prevDisabled">
            Previous Page
        </a>
        <a asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.Products.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-success @nextDisabled">
            Next Page
        </a>
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}


}



